struct RMStruct
{
	float RMSphere(float3 pos)
	{
		return length(pos)-50;
	}

	float opSmoothUnion( float d1, float d2, float k ) {
    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );
    return lerp( d2, d1, h ) - k*h*(1.0-h); }
};

RMStruct RM;

float3 pos =WorldPosition;

float4 Col =0;

for(int i=0;i<MaxSteps;i++)
{
	if(SceneDepth < length(pos-CameraPosition))
	break;
	
	float d1=RM.RMSphere(pos-ObjectPosition);
	float d2=SceneDepth - length(pos-CameraPosition);
	float distance = RM.opSmoothUnion(d1,d2,Smooth);
	
	if(distance<a)
	{
		Col=1;
		break;
	}
	pos+=CameraVector * 1;
}





return Col;